CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
from django.views.decorators.cache import cache_page
from django.utils.decorators import method_decorator
from django.shortcuts import render, get_object_or_404
from .models import Message

@cache_page(60)  # Cache for 60 seconds
def conversation_view(request, conversation_with_id):
    user = request.user
    messages = Message.objects.filter(
        sender=user, receiver_id=conversation_with_id
    ) | Message.objects.filter(
        sender_id=conversation_with_id, receiver=user
    )
    messages = messages.select_related('sender', 'receiver').order_by('timestamp')

    return render(request, 'conversation.html', {'messages': messages})
from django.utils.decorators import method_decorator
from django.views.decorators.cache import cache_page
from django.views import View

@method_decorator(cache_page(60), name='dispatch')
class ConversationView(View):
    def get(self, request, conversation_with_id):
        # your logic here
        ...
<h2>Conversation</h2>
<ul>
  {% for msg in messages %}
    <li><strong>{{ msg.sender }}:</strong> {{ msg.content }} <small>{{ msg.timestamp }}</small></li>
  {% endfor %}
</ul>
